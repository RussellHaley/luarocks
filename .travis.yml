language: python
python: 3.7.1

cache:
  directories:
  - lua_install
  - testrun/testing_cache-5.1
  - testrun/testing_cache-5.2
  - testrun/testing_cache-5.3
  - testrun/testing_cache-2.1
  - testrun/testing_server-5.1
  - testrun/testing_server-5.2
  - testrun/testing_server-5.3
  - testrun/testing_server-2.1
  - testrun/binary-samples
  - windows-deps-i686-w64-mingw32
  - build-windows-deps-i686-w64-mingw32
  - windows-deps-x86_64-w64-mingw32
  - build-windows-deps-x86_64-w64-mingw32

smoke_script: &smoke_script
  - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
  - ./makedist $BRANCH
  - ./smoke_test.sh luarocks-$BRANCH.tar.gz
  
unit_script: &unit_script
  - busted -o gtest --exclude-tags=git,integration --verbose -Xhelper "lua_dir=$PWD/lua_install,travis"
  - busted -o gtest --exclude-tags=git,integration --verbose -Xhelper "lua_dir=$PWD/lua_install,travis,env=full"
  
integration_script: &integration_script
  - lua -v
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then shellcheck ./configure; fi
  - ./configure --with-lua=lua_install
  - ./makedist dev
  - ./smoke_test.sh luarocks-dev.tar.gz
  - busted -o gtest --exclude-tags=gpg,git,unit --verbose -Xhelper "lua_dir=$PWD/lua_install,travis"
  - busted -o gtest --exclude-tags=gpg,git,unit --verbose -Xhelper "lua_dir=$PWD/lua_install,travis,env=full"

binaries_script: &binaries_script
  - ./configure --with-lua=lua_install
  - make
  - make $BINARY_TARGET MINGW_SYSROOT=/usr/$ARCH-w64-mingw32/lib $EXTRA_VARS
  - make $PACK_TARGET packbinarydir=luarocks-$VERSION-$OS-$ARCH packbinaryfile=luarocks-$VERSION-$OS-$ARCH.zip buildbinarydir=$BUILD_BINARY_DIR exeext=$EXEEXT
  - curl -T luarocks-$VERSION-$OS-$ARCH/luarocks-$VERSION-$OS-$ARCH.zip -X PUT -u $BINTRAY_USER:$BINTRAY_API_KEY "https://api.bintray.com/content/luarocks/luarocks/luarocks-$OS$FLAVOR/$VERSION/luarocks-$VERSION-$OS-$ARCH.zip?publish=1"

jobs:
  include:
#    # Smoke tests for release branches
#    - stage: smoke
#      if: branch =~ ^[0-9].*
#      script: *smoke_script
#      os: linux
#      env:
#        - LUA="lua=5.3"
#    - stage: smoke
#      if: branch =~ ^[0-9].*
#      script: *smoke_script
#      os: osx
#      language: generic
#      env:
#        - LUA="luajit=2.1"
#    # Unit tests for linux
#    - stage: Unit on Linux
#      script: *unit_script
#      os: linux
#      env:
#        - LUA="lua=5.1"
#    - stage: Unit on Linux
#      script: *unit_script
#      os: linux
#      env:
#        - LUA="lua=5.2"
#    - stage: Unit on Linux
#      script: *unit_script
#      os: linux
#      env:
#        - LUA="lua=5.3"
#    - stage: Unit on Linux
#      script: *unit_script
#      os: linux
#      env:
#        - LUA="luajit=2.1"
#    # Integration tests for linux
#    - stage: Integration on Linux
#      script: *integration_script
#      os: linux
#      env:
#        - LUA="lua=5.1"
#    - stage: Integration on Linux
#      script: *integration_script
#      os: linux
#      env:
#        - LUA="lua=5.2"
#    - stage: Integration on Linux
#      script: *integration_script
#      os: linux
#      env:
#        - LUA="lua=5.3"
#    - stage: Integration on Linux
#      script: *integration_script
#      os: linux
#      env:
#        - LUA="luajit=2.1"
#    # Unit tests for mac
#    - stage: Unit on Mac
#      script: *unit_script
#      os: osx
#      env:
#        - LUA="lua=5.1"
#      language: generic
#    - stage: Unit on Mac
#      script: *unit_script
#      os: osx
#      env:
#        - LUA="lua=5.2"
#      language: generic
#    - stage: Unit on Mac
#      script: *unit_script
#      os: osx
#      env:
#        - LUA="lua=5.3"
#      language: generic
#    - stage: Unit on Mac
#      script: *unit_script
#      os: osx
#      env:
#        - LUA="luajit=2.1"
#      language: generic
#    # Integration tests for mac
#    - stage: Integration on Mac
#      script: *integration_script
#      os: osx
#      env:
#        - LUA="lua=5.1"
#      language: generic
#    - stage: Integration on Mac
#      script: *integration_script
#      os: osx
#      env:
#        - LUA="lua=5.2"
#      language: generic
#    - stage: Integration on Mac
#      script: *integration_script
#      os: osx
#      env:
#        - LUA="lua=5.3"
#      language: generic
#    - stage: Integration on Mac
#      script: *integration_script
#      os: osx
#      env:
#        - LUA="luajit=2.1"
#      language: generic
    - stage: deploy
#      if: type=cron
      addons:
        apt:
          packages:
          - mingw-w64
      script: *binaries_script
      os: linux
      env:
        - OS="windows"
        - ARCH="i686"
        - FLAVOR="-nightly"
        - BINARY_TARGET="windows-binary-32"
        - PACK_TARGET="windows-pack-32"
        - BUILD_BINARY_DIR="build-windows-binary-$ARCH"
        - EXEEXT=".exe"
        - LUA="lua=5.3"
        - VERSION="dev-$(date +%Y-%m-%d)"
    - stage: deploy
#      if: type=cron
      addons:
        apt:
          packages:
          - mingw-w64
      script: *binaries_script
      os: linux
      env:
        - OS="windows"
        - ARCH="x86_64"
        - FLAVOR="-nightly"
        - BINARY_TARGET="windows-binary-64"
        - PACK_TARGET="windows-pack-64"
        - BUILD_BINARY_DIR="build-windows-binary-$ARCH"
        - EXEEXT=".exe"
        - LUA="lua=5.3"
        - VERSION="dev-$(date +%Y-%m-%d)"
    - stage: deploy
#      if: type=cron
      script: *binaries_script
      os: linux
      env:
        - OS="linux"
        - ARCH="x86_64"
        - FLAVOR="-nightly"
        - BINARY_TARGET=binary
        - PACK_TARGET=pack-binary
        - BUILD_BINARY_DIR=build-binary
        - EXEEXT=""
        - LUA="lua=5.3"
        - VERSION="dev-$(date +%Y-%m-%d)"
    - stage: deploy
#      if: type=cron
      script: *binaries_script
      language: generic
      os: osx
      addons:
        homebrew:
          packages:
            zlib
            openssl
      env:
        - OS="macos"
        - ARCH="x86_64"
        - FLAVOR="-nightly"
        - EXTRA_VARS="OPENSSL_DIR=/usr/local/opt"
        - BINARY_TARGET=binary
        - PACK_TARGET=pack-binary
        - BUILD_BINARY_DIR=build-binary
        - EXEEXT=""
        - LUA="lua=5.3"
        - VERSION="dev-$(date +%Y-%m-%d)"

before_install:
  - if [ ! -f lua_install/bin/luarocks ]; then pip3 install hererocks; fi
  - if [ ! -f lua_install/bin/luarocks ]; then hererocks lua_install -r^ --$LUA; fi
  - export PATH=$PATH:$PWD/lua_install/bin # Add directory with all installed binaries to PATH

install:
  - if [ ! -f lua_install/bin/busted ]; then luarocks install busted; fi
  - if [ ! -f lua_install/bin/luacov ]; then luarocks install cluacov; fi

after_success:
  - luacov -c $TRAVIS_BUILD_DIR/testrun/luacov.config
  - cd $TRAVIS_BUILD_DIR/testrun/ && bash <(curl -s https://codecov.io/bash)
  - grep "Summary" -B1 -A1000 $TRAVIS_BUILD_DIR/testrun/luacov.report.out

notifications:
  email:
    on_success: change
    on_failure: change
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/3320fc3f28abbb06e1d8
    on_success: change
    on_failure: always
    on_start: never
